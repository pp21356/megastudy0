package com.example.board.controller;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;
import org.springframework.web.servlet.view.RedirectView;

import com.example.board.services.BoardService;
import com.example.board.vo.BoardVO;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Controller
@Slf4j
@RequiredArgsConstructor
@RequestMapping("/board/*")
public class BoardController {
	@Autowired
	private final BoardService service;
	
	@GetMapping("list")
	public String list(Model model) {
		log.info("------------------------------");
		log.info("list called");
		log.info("------------------------------");
		model.addAttribute("list", service.getList());
		return "board/list";
	}
	
	@GetMapping("register")
	public void regi() {
		
	}
	
	@PostMapping("register")
	public RedirectView register(BoardVO board, RedirectAttributes rttr) {
		log.info("------------------------------");
		log.info("register called: " + board);
		log.info("------------------------------");
	
		service.register(board);
		
		//새롭게 등록된 번호와 같이 전달하기 위해 RedirectAttribute를 이용
		rttr.addFlashAttribute("bno", board.getBno());
		return new RedirectView("list");
	}
	
	@GetMapping({"get", "modify"})
	public void get(@RequestParam("bno") Long bno, HttpServletRequest request, Model model) {
		String reqURI= request.getRequestURI(); 
		String reqType = reqURI.substring(reqURI.indexOf(request.getContextPath())+7);
		log.info("------------------------------");
		log.info("Get called : " + bno);
		log.info("------------------------------");
		log.info(reqType);
		
		
		model.addAttribute("board", service.get(bno));
	}

	@PostMapping("modify")
	public RedirectView modify(BoardVO board, RedirectAttributes rttr) {
		log.info("modify : " + board);
		if(service.modify(board)) {
			//addattribute()는 GET방식으로 QueryString에 전달
			//addFlashAttribute()는 Session에 저장되어 전달
			rttr.addAttribute("result", "seccess");
			//rttr.addAttribute("board", service.get(board.getBno()));
		}
		return new RedirectView("list");
	}
	
	//삭제성공시 result에 "success"를 Flash에 담아서 전달
	//삭제성공시 result에 "fail"를 Flash에 담아서 전달
	@GetMapping("remove")
	public RedirectView remove(@RequestParam("bno") Long bno, RedirectAttributes rttr) {
		log.info("remove : " + bno);
		if(service.remove(bno)) {
			rttr.addFlashAttribute("result", "success");
		}
		else {
			rttr.addFlashAttribute("result", "fail");
		}
		return new RedirectView("remove");
	}
	
	
	
}
